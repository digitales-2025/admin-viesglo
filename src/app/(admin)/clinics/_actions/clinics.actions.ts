"use server";

import { http } from "@/lib/http/serverFetch";
import { ClinicCreate, ClinicResponse, ClinicUpdate } from "../_types/clinics.types";

const API_ENDPOINT = "/clinics";

/**
 * Obtiene todas las cl√≠nicas
 */
export async function getClinics(): Promise<{ data: ClinicResponse[]; success: boolean; error?: string }> {
  try {
    const [data, err] = await http.get<ClinicResponse[]>(API_ENDPOINT);
    if (err !== null) {
      return { success: false, data: [], error: err.message || "Error al obtener cl√≠nicas" };
    }
    return { success: true, data };
  } catch (error) {
    console.error("Error al obtener cl√≠nicas", error);
    return { success: false, data: [], error: "Error al obtener cl√≠nicas" };
  }
}

/**
 * Obtiene una cl√≠nica por su ID
 */
export async function getClinic(
  id: string
): Promise<{ data: ClinicResponse | null; success: boolean; error?: string }> {
  try {
    const [data, err] = await http.get<ClinicResponse>(`${API_ENDPOINT}/${id}`);
    if (err !== null) {
      return { success: false, data: null, error: err.message || "Error al obtener cl√≠nica" };
    }
    return { success: true, data };
  } catch (error) {
    console.error("Error al obtener cl√≠nica", error);
    return { success: false, data: null, error: "Error al obtener cl√≠nica" };
  }
}

/**
 * Crea una nueva cl√≠nica
 */
export async function createClinic(
  clinic: ClinicCreate
): Promise<{ data: ClinicResponse | null; success: boolean; error?: string }> {
  try {
    const [data, err] = await http.post<ClinicResponse>(API_ENDPOINT, clinic);
    if (err !== null) {
      return { success: false, data: null, error: err.message || "Error al crear cl√≠nica" };
    }
    return { success: true, data };
  } catch (error) {
    console.error("Error al crear cl√≠nica", error);
    return { success: false, data: null, error: "Error al crear cl√≠nica" };
  }
}

/**
 * Actualiza una cl√≠nica existentes
 */
export async function updateClinic(
  id: string,
  clinic: ClinicUpdate
): Promise<{ data: ClinicResponse | null; success: boolean; error?: string }> {
  try {
    const [data, err] = await http.put<ClinicResponse>(`${API_ENDPOINT}/${id}`, clinic);
    console.log("üöÄ ~ err:", err);
    console.log("üöÄ ~ data:", data);
    if (err !== null) {
      return { success: false, data: null, error: err.message || "Error al actualizar cl√≠nica" };
    }
    return { success: true, data };
  } catch (error) {
    console.error("Error al actualizar cl√≠nica", error);
    return { success: false, data: null, error: "Error al actualizar cl√≠nica" };
  }
}

/**
 * Elimina una cl√≠nica existente
 */
export async function deleteClinic(id: string): Promise<{ success: boolean; error?: string }> {
  try {
    const [_, err] = await http.delete<ClinicResponse>(`${API_ENDPOINT}/${id}`);
    if (err !== null) {
      return { success: false, error: err.message || "Error al eliminar cl√≠nica" };
    }
    return { success: true };
  } catch (error) {
    console.error("Error al eliminar cl√≠nica", error);
    return { success: false, error: "Error al eliminar cl√≠nica" };
  }
}
